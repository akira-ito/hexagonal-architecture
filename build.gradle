plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.0.4'
}

group = 'ito.akira.hexagonal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def getProperties(environment) {
    Properties properties = new Properties()
    File propertiesFile = new File("$projectDir/src/main/resources/${environment}.properties")
    propertiesFile.withInputStream {
        properties.load(it)
    }
    return properties
}

def properties = getProperties(System.properties['ENV_PROFILE'] ?: 'application')
def diffVersion = project.hasProperty("diffVersion") ? project.getProperty("diffVersion") : new Date().format('dd-MM-yyyy-hh-mm-ss')

tasks.named('update') {
    doFirst {
        liquibase {
            activities {
                main {
                    changeLogFile 'src/main/resources/db/changelog-master.xml'
                    url "jdbc:postgresql://$System.env.DATASOURCE_HOST:$System.env.DATASOURCE_PORT/$System.env.DATASOURCE_DB"
                    // properties['spring.datasource.url']
                    username System.getenv('DATASOURCE_USERNAME') // properties['spring.datasource.username']
                    password System.getenv('DATASOURCE_PASSWORD') // properties['spring.datasource.password']
                    referenceUrl 'hibernate:spring:ito.akira.hexagonal?dialect=org.hibernate.dialect.PostgreSQLDialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
                }
            }
        }

    }
}

tasks.named('diffChangeLog') {
    doFirst {
        liquibase {
            activities {
                main {
                    changeLogFile 'src/main/resources/db/changelog/changelog-' + diffVersion + '.postgresql.sql'
                    url "jdbc:postgresql://$System.env.DATASOURCE_HOST:$System.env.DATASOURCE_PORT/$System.env.DATASOURCE_DB"
                    // properties['spring.datasource.url']
                    username System.getenv('DATASOURCE_USERNAME') // properties['spring.datasource.username']
                    password System.getenv('DATASOURCE_PASSWORD') // properties['spring.datasource.password']
                    referenceUrl 'hibernate:spring:ito.akira.hexagonal?dialect=org.hibernate.dialect.PostgreSQLDialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
                }
            }
        }

    }
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //implementation 'io.springfox:springfox-boot-starter'
    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')

    //implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
    liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.1.1'
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
    liquibaseRuntime sourceSets.main.output
}


test {
    useJUnitPlatform()
}
